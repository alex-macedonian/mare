#!/usr/bin/env bash
#
# mare - tool the home computer setup
#
# Copyright (C) 2019 - 2020 Alexandre Popov <consiorp@gmail.com>.
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#################################
#           VARIABLES           #
#################################

LC_ALL=C
export LC_ALL

FILE_SIZE=$(cat /usr/share/mare/version.list | head -n1)
BASH=0
PACKAGE_MANAGER=0
COMMAND="$1"

#################################
# 			FUNCTION			#
#################################

# Check used tools for their presence in the operating system
check_utils()
{
	local SH=0
	local COREUTILS=0
	local PERL=0
	local PROCPS=0
	local PCIITILS=0
	local USBUTILS=0

	if [ "$SHELL" = "/bin/bash" ]; then
		bash --version | head -n1 | cut -d" " -f2-4
	else
		echo "`basename $0:` bash is not found"
	fi

	SH=$(readlink -f /bin/sh)
	echo "/bin/sh link to ${SH}"
	
	if [ -x /usr/bin/lsb_release ]; then
		lsb_release --id
	else
		echo "`basename $0:` lsb_release is not found"
	fi

	COREUTILS=$(chmod --version | head -n1 | cut -d")" -f2)
	echo "GNU coreutils ${COREUTILS}"
	find --version | head -n1
	
	if [ -x /usr/bin/apt ]; then
		apt --version | head -n1 | cut -d"(" -f1
	else
		echo "`basename $0:` apt is not found"
	fi
	
	if [ -x /usr/bin/dpkg ]; then
		echo "dpkg `/usr/bin/dpkg --version | head -n1 | cut -d" " -f7`"
	else
		echo "`basename $0:` dpkg is not found"
	fi
	
	if [ -h /usr/bin/awk ]; then
  		echo "/usr/bin/awk link to `readlink -f /usr/bin/awk`"
	elif [ -x /usr/bin/awk ]; then
  		echo "awk `/usr/bin/awk --version | head -n1`"
  	elif [ -x /usr/bin/gawk ]; then
  		echo "gawk `/usr/bin/gawk --version | head -n1`"
	else 
  		echo "`basename $0:` awk is not found" 
	fi
	
	sed --version | head -n1
	wget --version | head -n1 | cut -d" " -f1-3
	update-grub --version
	grep --version | head -n1
	PERL=$(perl -V:version | cut -d"'" -f2)
	echo "Perl ${PERL}" 
	python3 --version
	ip -Version

	PROCPS=$(free --version | cut -d" " -f4)
	echo "Procps ${PROCPS}"
	PCIUTILS=$(lspci --version | cut -d" " -f3)
	echo "PCI utils ${PCIUTILS}"
	USBUTILS=$(lsusb --version | cut -d" " -f3)
	echo "USB utils ${USBUTILS}"
}

###################### BEGIN ######################

if [ -z "$FILE_SIZE" ]; then
	check_utils > /usr/share/mare/version.list
fi

BASH=$(grep "mare: bash is" /usr/share/mare/version.list)
PACKAGE_MANAGER=$(grep "^m*a" /usr/share/mare/version.list)

if [ -z "$BASH" ]; then
	if [ -z "$PACKAGE_MANAGER" ]; then
		# Usage
		while [ "$#" -gt 0 ]; do
			case "$1" in
				-n | --netbt )
				/usr/lib/mare/netbt.sh
				/usr/lib/mare/sudo.sh
				;;
				-d | --drivers )
				/usr/lib/mare/drivers.sh
				;;
				-m | --motd )
				/usr/lib/mare/motd.sh
				;;
				-h | --help )
				cat /usr/share/mare/usage.list
				exit 0 
				;;
				-v | --version )
				cat /usr/share/mare/release.list
				exit 0 
				;;
				* )
				echo "`basename $0:` wrong key — «$1»"
				echo "On command «mare --help» one can get additional information."
				exit 1
    			;;
    		esac
			break
		done

		if [ -z "$COMMAND" ]; then
			echo "`basename $0:` indicate required action"
			echo "For help using the program, enter the command:"
			echo "mare -h or mare --help."
			exit 1
		fi
		shift
	else
		echo "`basename $0:` you are using a different distribution GNU/Linux"
		exit 1
	fi
else
	echo "`basename $0:` this script only works with bash"
	exit 1
fi

###################### END ######################
